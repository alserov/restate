// Code generated by MockGen. DO NOT EDIT.
// Source: .\internal\log\logger.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	log "github.com/alserov/restate/meetings/internal/log"
	gomock "github.com/golang/mock/gomock"
)

// MockLogger is a mock of Logger interface.
type MockLogger struct {
	ctrl     *gomock.Controller
	recorder *MockLoggerMockRecorder
}

// MockLoggerMockRecorder is the mock recorder for MockLogger.
type MockLoggerMockRecorder struct {
	mock *MockLogger
}

// NewMockLogger creates a new mock instance.
func NewMockLogger(ctrl *gomock.Controller) *MockLogger {
	mock := &MockLogger{ctrl: ctrl}
	mock.recorder = &MockLoggerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLogger) EXPECT() *MockLoggerMockRecorder {
	return m.recorder
}

// Debug mocks base method.
func (m *MockLogger) Debug(s string, data *log.Data) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Debug", s, data)
}

// Debug indicates an expected call of Debug.
func (mr *MockLoggerMockRecorder) Debug(s, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Debug", reflect.TypeOf((*MockLogger)(nil).Debug), s, data)
}

// Error mocks base method.
func (m *MockLogger) Error(s string, data *log.Data) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Error", s, data)
}

// Error indicates an expected call of Error.
func (mr *MockLoggerMockRecorder) Error(s, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*MockLogger)(nil).Error), s, data)
}

// Info mocks base method.
func (m *MockLogger) Info(s string, data *log.Data) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Info", s, data)
}

// Info indicates an expected call of Info.
func (mr *MockLoggerMockRecorder) Info(s, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Info", reflect.TypeOf((*MockLogger)(nil).Info), s, data)
}

// Trace mocks base method.
func (m *MockLogger) Trace(key, msg string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Trace", key, msg)
}

// Trace indicates an expected call of Trace.
func (mr *MockLoggerMockRecorder) Trace(key, msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Trace", reflect.TypeOf((*MockLogger)(nil).Trace), key, msg)
}

// Warn mocks base method.
func (m *MockLogger) Warn(s string, data *log.Data) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Warn", s, data)
}

// Warn indicates an expected call of Warn.
func (mr *MockLoggerMockRecorder) Warn(s, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Warn", reflect.TypeOf((*MockLogger)(nil).Warn), s, data)
}
